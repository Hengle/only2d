//
// Created by leafnsand on 2015/7/20.
//

#include "Keyboard.h"

#include <SDL2/SDL_keyboard.h>

namespace only2d
{
	const std::map<Key, SDL_Keycode> Keyboard::key2code = 
	{
		{ Key::RETURN, SDLK_RETURN },
		{ Key::ESCAPE, SDLK_ESCAPE },
		{ Key::BACKSPACE, SDLK_BACKSPACE },
		{ Key::TAB, SDLK_TAB },
		{ Key::SPACE, SDLK_SPACE },
		{ Key::EXCLAIM, SDLK_EXCLAIM },
		{ Key::QUOTEDBL, SDLK_QUOTEDBL },
		{ Key::HASH, SDLK_HASH },
		{ Key::PERCENT, SDLK_PERCENT },
		{ Key::DOLLAR, SDLK_DOLLAR },
		{ Key::AMPERSAND, SDLK_AMPERSAND },
		{ Key::QUOTE, SDLK_QUOTE },
		{ Key::LEFTPAREN, SDLK_LEFTPAREN },
		{ Key::RIGHTPAREN, SDLK_RIGHTPAREN },
		{ Key::ASTERISK, SDLK_ASTERISK },
		{ Key::PLUS, SDLK_PLUS },
		{ Key::COMMA, SDLK_COMMA },
		{ Key::MINUS, SDLK_MINUS },
		{ Key::PERIOD, SDLK_PERIOD },
		{ Key::SLASH, SDLK_SLASH },
		{ Key::NUM_0, SDLK_0 },
		{ Key::NUM_1, SDLK_1 },
		{ Key::NUM_2, SDLK_2 },
		{ Key::NUM_3, SDLK_3 },
		{ Key::NUM_4, SDLK_4 },
		{ Key::NUM_5, SDLK_5 },
		{ Key::NUM_6, SDLK_6 },
		{ Key::NUM_7, SDLK_7 },
		{ Key::NUM_8, SDLK_8 },
		{ Key::NUM_9, SDLK_9 },
		{ Key::COLON, SDLK_COLON },
		{ Key::SEMICOLON, SDLK_SEMICOLON },
		{ Key::LESS, SDLK_LESS },
		{ Key::EQUALS, SDLK_EQUALS },
		{ Key::GREATER, SDLK_GREATER },
		{ Key::QUESTION, SDLK_QUESTION },
		{ Key::AT, SDLK_AT },
		{ Key::LEFTBRACKET, SDLK_LEFTBRACKET },
		{ Key::BACKSLASH, SDLK_BACKSLASH },
		{ Key::RIGHTBRACKET, SDLK_RIGHTBRACKET },
		{ Key::CARET, SDLK_CARET },
		{ Key::UNDERSCORE, SDLK_UNDERSCORE },
		{ Key::BACKQUOTE, SDLK_BACKQUOTE },
		{ Key::A, SDLK_a },
		{ Key::B, SDLK_b },
		{ Key::C, SDLK_c },
		{ Key::D, SDLK_d },
		{ Key::E, SDLK_e },
		{ Key::F, SDLK_f },
		{ Key::G, SDLK_g },
		{ Key::H, SDLK_h },
		{ Key::I, SDLK_i },
		{ Key::J, SDLK_j },
		{ Key::K, SDLK_k },
		{ Key::L, SDLK_l },
		{ Key::M, SDLK_m },
		{ Key::N, SDLK_n },
		{ Key::O, SDLK_o },
		{ Key::P, SDLK_p },
		{ Key::Q, SDLK_q },
		{ Key::R, SDLK_r },
		{ Key::S, SDLK_s },
		{ Key::T, SDLK_t },
		{ Key::U, SDLK_u },
		{ Key::V, SDLK_v },
		{ Key::W, SDLK_w },
		{ Key::X, SDLK_x },
		{ Key::Y, SDLK_y },
		{ Key::Z, SDLK_z },
		{ Key::CAPSLOCK, SDLK_CAPSLOCK },
		{ Key::F1, SDLK_F1 },
		{ Key::F2, SDLK_F2 },
		{ Key::F3, SDLK_F3 },
		{ Key::F4, SDLK_F4 },
		{ Key::F5, SDLK_F5 },
		{ Key::F6, SDLK_F6 },
		{ Key::F7, SDLK_F7 },
		{ Key::F8, SDLK_F8 },
		{ Key::F9, SDLK_F9 },
		{ Key::F10, SDLK_F10 },
		{ Key::F11, SDLK_F11 },
		{ Key::F12, SDLK_F12 },
		{ Key::PRINTSCREEN, SDLK_PRINTSCREEN },
		{ Key::SCROLLLOCK, SDLK_SCROLLLOCK },
		{ Key::PAUSE, SDLK_PAUSE },
		{ Key::INSERT, SDLK_INSERT },
		{ Key::HOME, SDLK_HOME },
		{ Key::PAGEUP, SDLK_PAGEUP },
		{ Key::DEL, SDLK_DELETE },
		{ Key::END, SDLK_END },
		{ Key::PAGEDOWN, SDLK_PAGEDOWN },
		{ Key::RIGHT, SDLK_RIGHT },
		{ Key::LEFT, SDLK_LEFT },
		{ Key::DOWN, SDLK_DOWN },
		{ Key::UP, SDLK_UP },
		{ Key::NUMLOCKCLEAR, SDLK_NUMLOCKCLEAR },
		{ Key::KP_DIVIDE, SDLK_KP_DIVIDE },
		{ Key::KP_MULTIPLY, SDLK_KP_MULTIPLY },
		{ Key::KP_MINUS, SDLK_KP_MINUS },
		{ Key::KP_PLUS, SDLK_KP_PLUS },
		{ Key::KP_ENTER, SDLK_KP_ENTER },
		{ Key::KP_1, SDLK_KP_1 },
		{ Key::KP_2, SDLK_KP_2 },
		{ Key::KP_3, SDLK_KP_3 },
		{ Key::KP_4, SDLK_KP_4 },
		{ Key::KP_5, SDLK_KP_5 },
		{ Key::KP_6, SDLK_KP_6 },
		{ Key::KP_7, SDLK_KP_7 },
		{ Key::KP_8, SDLK_KP_8 },
		{ Key::KP_9, SDLK_KP_9 },
		{ Key::KP_0, SDLK_KP_0 },
		{ Key::KP_PERIOD, SDLK_KP_PERIOD },
		{ Key::APPLICATION, SDLK_APPLICATION },
		{ Key::POWER, SDLK_POWER },
		{ Key::KP_EQUALS, SDLK_KP_EQUALS },
		{ Key::F13, SDLK_F13 },
		{ Key::F14, SDLK_F14 },
		{ Key::F15, SDLK_F15 },
		{ Key::F16, SDLK_F16 },
		{ Key::F17, SDLK_F17 },
		{ Key::F18, SDLK_F18 },
		{ Key::F19, SDLK_F19 },
		{ Key::F20, SDLK_F20 },
		{ Key::F21, SDLK_F21 },
		{ Key::F22, SDLK_F22 },
		{ Key::F23, SDLK_F23 },
		{ Key::F24, SDLK_F24 },
		{ Key::EXECUTE, SDLK_EXECUTE },
		{ Key::HELP, SDLK_HELP },
		{ Key::MENU, SDLK_MENU },
		{ Key::SELECT, SDLK_SELECT },
		{ Key::STOP, SDLK_STOP },
		{ Key::AGAIN, SDLK_AGAIN },
		{ Key::UNDO, SDLK_UNDO },
		{ Key::CUT, SDLK_CUT },
		{ Key::COPY, SDLK_COPY },
		{ Key::PASTE, SDLK_PASTE },
		{ Key::FIND, SDLK_FIND },
		{ Key::MUTE, SDLK_MUTE },
		{ Key::VOLUMEUP, SDLK_VOLUMEUP },
		{ Key::VOLUMEDOWN, SDLK_VOLUMEDOWN },
		{ Key::KP_COMMA, SDLK_KP_COMMA },
		{ Key::KP_EQUALSAS400, SDLK_KP_EQUALSAS400 },
		{ Key::ALTERASE, SDLK_ALTERASE },
		{ Key::SYSREQ, SDLK_SYSREQ },
		{ Key::CANCEL, SDLK_CANCEL },
		{ Key::CLEAR, SDLK_CLEAR },
		{ Key::PRIOR, SDLK_PRIOR },
		{ Key::RETURN2, SDLK_RETURN2 },
		{ Key::SEPARATOR, SDLK_SEPARATOR },
		{ Key::KEY_OUT, SDLK_OUT },
		{ Key::OPER, SDLK_OPER },
		{ Key::CLEARAGAIN, SDLK_CLEARAGAIN },
		{ Key::CRSEL, SDLK_CRSEL },
		{ Key::EXSEL, SDLK_EXSEL },
		{ Key::KP_00, SDLK_KP_00 },
		{ Key::KP_000, SDLK_KP_000 },
		{ Key::THOUSANDSSEPARATOR, SDLK_THOUSANDSSEPARATOR },
		{ Key::DECIMALSEPARATOR, SDLK_DECIMALSEPARATOR },
		{ Key::CURRENCYUNIT, SDLK_CURRENCYUNIT },
		{ Key::CURRENCYSUBUNIT, SDLK_CURRENCYSUBUNIT },
		{ Key::KP_LEFTPAREN, SDLK_KP_LEFTPAREN },
		{ Key::KP_RIGHTPAREN, SDLK_KP_RIGHTPAREN },
		{ Key::KP_LEFTBRACE, SDLK_KP_LEFTBRACE },
		{ Key::KP_RIGHTBRACE, SDLK_KP_RIGHTBRACE },
		{ Key::KP_TAB, SDLK_KP_TAB },
		{ Key::KP_BACKSPACE, SDLK_KP_BACKSPACE },
		{ Key::KP_A, SDLK_KP_A },
		{ Key::KP_B, SDLK_KP_B },
		{ Key::KP_C, SDLK_KP_C },
		{ Key::KP_D, SDLK_KP_D },
		{ Key::KP_E, SDLK_KP_E },
		{ Key::KP_F, SDLK_KP_F },
		{ Key::KP_XOR, SDLK_KP_XOR },
		{ Key::KP_POWER, SDLK_KP_POWER },
		{ Key::KP_PERCENT, SDLK_KP_PERCENT },
		{ Key::KP_LESS, SDLK_KP_LESS },
		{ Key::KP_GREATER, SDLK_KP_GREATER },
		{ Key::KP_AMPERSAND, SDLK_KP_AMPERSAND },
		{ Key::KP_DBLAMPERSAND, SDLK_KP_DBLAMPERSAND },
		{ Key::KP_VERTICALBAR, SDLK_KP_VERTICALBAR },
		{ Key::KP_DBLVERTICALBAR, SDLK_KP_DBLVERTICALBAR },
		{ Key::KP_COLON, SDLK_KP_COLON },
		{ Key::KP_HASH, SDLK_KP_HASH },
		{ Key::KP_SPACE, SDLK_KP_SPACE },
		{ Key::KP_AT, SDLK_KP_AT },
		{ Key::KP_EXCLAM, SDLK_KP_EXCLAM },
		{ Key::KP_MEMSTORE, SDLK_KP_MEMSTORE },
		{ Key::KP_MEMRECALL, SDLK_KP_MEMRECALL },
		{ Key::KP_MEMCLEAR, SDLK_KP_MEMCLEAR },
		{ Key::KP_MEMADD, SDLK_KP_MEMADD },
		{ Key::KP_MEMSUBTRACT, SDLK_KP_MEMSUBTRACT },
		{ Key::KP_MEMMULTIPLY, SDLK_KP_MEMMULTIPLY },
		{ Key::KP_MEMDIVIDE, SDLK_KP_MEMDIVIDE },
		{ Key::KP_PLUSMINUS, SDLK_KP_PLUSMINUS },
		{ Key::KP_CLEAR, SDLK_KP_CLEAR },
		{ Key::KP_CLEARENTRY, SDLK_KP_CLEARENTRY },
		{ Key::KP_BINARY, SDLK_KP_BINARY },
		{ Key::KP_OCTAL, SDLK_KP_OCTAL },
		{ Key::KP_DECIMAL, SDLK_KP_DECIMAL },
		{ Key::KP_HEXADECIMAL, SDLK_KP_HEXADECIMAL },
		{ Key::LCTRL, SDLK_LCTRL },
		{ Key::LSHIFT, SDLK_LSHIFT },
		{ Key::LALT, SDLK_LALT },
		{ Key::LGUI, SDLK_LGUI },
		{ Key::RCTRL, SDLK_RCTRL },
		{ Key::RSHIFT, SDLK_RSHIFT },
		{ Key::RALT, SDLK_RALT },
		{ Key::RGUI, SDLK_RGUI },
		{ Key::MODE, SDLK_MODE },
		{ Key::AUDIONEXT, SDLK_AUDIONEXT },
		{ Key::AUDIOPREV, SDLK_AUDIOPREV },
		{ Key::AUDIOSTOP, SDLK_AUDIOSTOP },
		{ Key::AUDIOPLAY, SDLK_AUDIOPLAY },
		{ Key::AUDIOMUTE, SDLK_AUDIOMUTE },
		{ Key::MEDIASELECT, SDLK_MEDIASELECT },
		{ Key::WWW, SDLK_WWW },
		{ Key::MAIL, SDLK_MAIL },
		{ Key::CALCULATOR, SDLK_CALCULATOR },
		{ Key::COMPUTER, SDLK_COMPUTER },
		{ Key::AC_SEARCH, SDLK_AC_SEARCH },
		{ Key::AC_HOME, SDLK_AC_HOME },
		{ Key::AC_BACK, SDLK_AC_BACK },
		{ Key::AC_FORWARD, SDLK_AC_FORWARD },
		{ Key::AC_STOP, SDLK_AC_STOP },
		{ Key::AC_REFRESH, SDLK_AC_REFRESH },
		{ Key::AC_BOOKMARKS, SDLK_AC_BOOKMARKS },
		{ Key::BRIGHTNESSDOWN, SDLK_BRIGHTNESSDOWN },
		{ Key::BRIGHTNESSUP, SDLK_BRIGHTNESSUP },
		{ Key::DISPLAYSWITCH, SDLK_DISPLAYSWITCH },
		{ Key::KBDILLUMTOGGLE, SDLK_KBDILLUMTOGGLE },
		{ Key::KBDILLUMDOWN, SDLK_KBDILLUMDOWN },
		{ Key::KBDILLUMUP, SDLK_KBDILLUMUP },
		{ Key::EJECT, SDLK_EJECT },
		{ Key::SLEEP, SDLK_SLEEP },
	};

	Keyboard::Keyboard()
	{
	}

	Keyboard::~Keyboard()
	{
	}

	bool Keyboard::isPressed(const std::vector<Key> &keys)
	{
		auto state = SDL_GetKeyboardState(nullptr);
		for (auto key : keys)
		{
			auto scancode = SDL_GetScancodeFromKey(key2code.at(key));
			if (state[scancode])
			{
				return true;
			}
		}
		return false;
	}
}